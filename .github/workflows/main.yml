
name: Build Aarya App APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3

    - name: Install required Android SDK packages
      run: |
        yes | sdkmanager --licenses
        sdkmanager "platform-tools" "cmdline-tools;latest" "platforms;android-33" "build-tools;33.0.2"

    - name: Install Cordova (CLI stable)
      run: npm install -g cordova@12.0.0

    # ✅ यह स्टेप सबसे महत्वपूर्ण है: प्रोजेक्ट बनाएँ + copy को सुरक्षित तरीके से करें
    - name: Prepare Cordova project
      shell: bash
      run: |
        set -e
        echo "Listing repo root:"
        ls -la

        # 1) Fresh Cordova app
        rm -rf aarya
        cordova create aarya com.aarya.superapp AaryaApp

        echo "Listing default aarya/www:"
        ls -la aarya/www || true

        # 2) Ensure our www exists
        if [ ! -d "www" ]; then
          echo "ERROR: repo/www not found"; exit 1;
        fi

        # 3) Replace default www with our www (clean + copy)
        rm -rf aarya/www/*
        shopt -s dotglob
        cp -r www/* aarya/www/

        # 4) Copy config.xml if present
        if [ -f "config.xml" ]; then
          cp -f config.xml aarya/config.xml
        else
          echo "WARNING: config.xml not found at repo root (using Cordova default)"
        fi

        echo "After copy, aarya/www contains:"
        ls -la aarya/www

    - name: Add Android platform
      run: |
        set -e
        cd aarya
        cordova platform add android@12.0.1
        cordova requirements

    - name: Build APK (debug)
      run: |
        set -e
        cd aarya
        cordova build android --debug --no-interactive
        ls -la platforms/android/app/build/outputs/apk/debug || true

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: AaryaApp-debug.apk
        path: aarya/platforms/android/app/build/outputs/apk/debug/app-debug.apk
